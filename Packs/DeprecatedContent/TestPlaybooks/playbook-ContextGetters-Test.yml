description: ''
id: ContextGetters_Test
inputs: []
name: ContextGetters_Test
outputs: []
starttaskid: '0'
tasks:
  '0':
    id: '0'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '1'
      - '3'
      - '2'
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ''
      id: 8dac17d4-959a-4040-8ab7-bff50ed7bb63
      iscommand: false
      name: ''
      version: -1
    taskid: 8dac17d4-959a-4040-8ab7-bff50ed7bb63
    timertriggers: []
    type: start
    view: "{\n  \"position\": {\n    \"x\": 450,\n    \"y\": 50\n  }\n}"
  '1':
    id: '1'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '4'
    note: false
    quietmode: 0
    scriptarguments:
      text:
        simple: mail1@gmail.com,mail2@yahoo.com,mail3@aol.com
    separatecontext: false
    skipunavailable: false
    task:
      brand: ''
      description: Extract Emails from the given text and place them both as output
        and in the context of a playbook. If given an object, will convert to JSON.
      id: 3b9762a2-4911-4632-8989-f5b7fb534b46
      iscommand: false
      name: ExtractEmail
      script: ExtractEmail
      type: regular
      version: -1
    taskid: 3b9762a2-4911-4632-8989-f5b7fb534b46
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 450,\n    \"y\": 230\n  }\n}"
  '10':
    id: '10'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '13'
    note: false
    quietmode: 0
    scriptarguments:
      excludedEmails:
        simple: mail3@aol.com
      extend-context:
        simple: testExcludedEmail=.
    separatecontext: false
    skipunavailable: false
    task:
      brand: ''
      description: Gets all email addresses in context, excluding ones given.
      id: e5a0e7dd-69f4-4e4c-8aed-f374c7bd78f5
      iscommand: false
      name: ContextGetExcludedEmails
      script: ContextGetEmails
      type: regular
      version: -1
    taskid: e5a0e7dd-69f4-4e4c-8aed-f374c7bd78f5
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 450,\n    \"y\": 783\n  }\n}"
  '11':
    id: '11'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '12'
    note: false
    quietmode: 0
    scriptarguments:
      excludedIps:
        simple: 1.2.3.4
      extend-context:
        simple: testExcludedIP=.
    separatecontext: false
    skipunavailable: false
    task:
      brand: ''
      description: Gets all IP addresses in context, excluding ones given.
      id: c0c75a1f-4ee0-48d6-88b9-a7ea4474c03f
      iscommand: false
      name: ContextGetExcludedIps
      script: ContextGetIps
      type: regular
      version: -1
    taskid: c0c75a1f-4ee0-48d6-88b9-a7ea4474c03f
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 46,\n    \"y\": 783\n  }\n}"
  '12':
    id: '12'
    ignoreworker: false
    nexttasks:
      'yes':
      - '21'
    note: false
    quietmode: 0
    scriptarguments:
      expectedValue:
        simple: 8.8.8.8,32.43.54.65
      fields: {}
      path: {}
      value:
        simple: ${.=val.testExcludedIP.join() === '8.8.8.8,32.43.54.65'}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: bfdada19-2faf-4238-842c-3f347cb78713
      iscommand: false
      name: VerifyResponse(excludedIP)
      script: IsTrue
      type: condition
      version: -1
    taskid: bfdada19-2faf-4238-842c-3f347cb78713
    timertriggers: []
    type: condition
    view: "{\n  \"position\": {\n    \"x\": 46,\n    \"y\": 974\n  }\n}"
  '13':
    id: '13'
    ignoreworker: false
    nexttasks:
      'yes':
      - '21'
    note: false
    quietmode: 0
    scriptarguments:
      expectedValue:
        simple: mail1@gmail.com,mail2@yahoo.com
      fields: {}
      path: {}
      value:
        simple: ${.=val.testExcludedEmail.join() === 'mail1@gmail.com,mail2@yahoo.com'}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: c93ced11-8d73-4329-8e49-58999304c4b7
      iscommand: false
      name: VerifyResponse(excludedEmail)
      script: IsTrue
      type: condition
      version: -1
    taskid: c93ced11-8d73-4329-8e49-58999304c4b7
    timertriggers: []
    type: condition
    view: "{\n  \"position\": {\n    \"x\": 450,\n    \"y\": 974\n  }\n}"
  '14':
    id: '14'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '19'
    note: false
    quietmode: 0
    scriptarguments:
      extend-context:
        simple: testSHA256=.
      hash:
        simple: SHA256
    separatecontext: false
    skipunavailable: false
    task:
      brand: ''
      description: Gets hashes (MD5,SHA1,SHA256) from context.
      id: c7f0c056-e5ea-4843-8ee7-134e161c3c24
      iscommand: false
      name: ContextGetHashes(SHA256)
      script: ContextGetHashes
      type: regular
      version: -1
    taskid: c7f0c056-e5ea-4843-8ee7-134e161c3c24
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 1679,\n    \"y\": 413\n  }\n}"
  '15':
    id: '15'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '20'
    note: false
    quietmode: 0
    scriptarguments:
      extend-context:
        simple: testSHA1=.
      hash:
        simple: SHA1
    separatecontext: false
    skipunavailable: false
    task:
      brand: ''
      description: Gets hashes (MD5,SHA1,SHA256) from context.
      id: 3b376106-4161-4521-8d56-0b525ad332dd
      iscommand: false
      name: ContextGetHashes(SHA1)
      script: ContextGetHashes
      type: regular
      version: -1
    taskid: 3b376106-4161-4521-8d56-0b525ad332dd
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 1269,\n    \"y\": 413\n  }\n}"
  '16':
    id: '16'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '17'
    note: false
    quietmode: 0
    scriptarguments:
      extend-context:
        simple: testHash=.
      hash: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ''
      description: Gets hashes (MD5,SHA1,SHA256) from context.
      id: 2146fa23-7efe-4d59-85e9-70d1353914d3
      iscommand: false
      name: ContextGetHashes(all)
      script: ContextGetHashes
      type: regular
      version: -1
    taskid: 2146fa23-7efe-4d59-85e9-70d1353914d3
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 2089,\n    \"y\": 413\n  }\n}"
  '17':
    id: '17'
    ignoreworker: false
    nexttasks:
      'yes':
      - '21'
    note: false
    quietmode: 0
    scriptarguments:
      expectedValue:
        simple: 2e6d76b398ef59f3041ef7eb30060a787e3c8d594747ed08b096d7eab608682d
      fields: {}
      path: {}
      value:
        simple: ${.=val.testHash.join() === 'fe3aacae7fda163c2b628a08ba67585b,427602bfaed3b5bcec58c4957d123cd7312a8f3b,ba8b644d5b7cdc28c99b3aa35bccf9098b2cdd366cc57200050ecf17e86fe561'}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 44aaeefe-fe7a-4831-898c-c9ee9c7dee98
      iscommand: false
      name: VerifyResponse(all hash)
      script: IsTrue
      type: condition
      version: -1
    taskid: 44aaeefe-fe7a-4831-898c-c9ee9c7dee98
    timertriggers: []
    type: condition
    view: "{\n  \"position\": {\n    \"x\": 2089,\n    \"y\": 593\n  }\n}"
  '19':
    id: '19'
    ignoreworker: false
    nexttasks:
      'yes':
      - '21'
    note: false
    quietmode: 0
    scriptarguments:
      expectedValue: {}
      fields: {}
      path: {}
      value:
        simple: ${.=val.testSHA256.join() === 'ba8b644d5b7cdc28c99b3aa35bccf9098b2cdd366cc57200050ecf17e86fe561'}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 56898e08-611e-4b73-8854-024a016ac20b
      iscommand: false
      name: VerifyResponse(SHA256)
      script: IsTrue
      type: condition
      version: -1
    taskid: 56898e08-611e-4b73-8854-024a016ac20b
    timertriggers: []
    type: condition
    view: "{\n  \"position\": {\n    \"x\": 1679,\n    \"y\": 593\n  }\n}"
  '2':
    id: '2'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '6'
      - '15'
      - '14'
      - '16'
    note: false
    quietmode: 0
    scriptarguments:
      text:
        simple: fe3aacae7fda163c2b628a08ba67585b,427602bfaed3b5bcec58c4957d123cd7312a8f3b,ba8b644d5b7cdc28c99b3aa35bccf9098b2cdd366cc57200050ecf17e86fe561
    separatecontext: false
    skipunavailable: false
    task:
      brand: ''
      description: Extract md5, sha1, sha256 from the given text and place them both
        as output and in the context of a playbook
      id: cea56ee7-aca9-4240-86b7-e2cc6ad3c97c
      iscommand: false
      name: ExtractHash
      script: ExtractHash
      type: regular
      version: -1
    taskid: cea56ee7-aca9-4240-86b7-e2cc6ad3c97c
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 856,\n    \"y\": 229\n  }\n}"
  '20':
    id: '20'
    ignoreworker: false
    nexttasks:
      'yes':
      - '21'
    note: false
    quietmode: 0
    scriptarguments:
      expectedValue:
        simple: DF2EFA060E335F97628CA39C9FEF5469AB3CB837, c99a11a53a3748269e3f86d7ac38df11,2e6d76b398ef59f3041ef7eb30060a787e3c8d594747ed08b096d7eab608682d
      fields: {}
      path: {}
      value:
        simple: ${.=val.testSHA1.join() === '427602bfaed3b5bcec58c4957d123cd7312a8f3b'}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 1e5affe0-c2dc-480f-8348-007b11c5a076
      iscommand: false
      name: VerifyResponse(SHA1)
      script: IsTrue
      type: condition
      version: -1
    taskid: 1e5affe0-c2dc-480f-8348-007b11c5a076
    timertriggers: []
    type: condition
    view: "{\n  \"position\": {\n    \"x\": 1269,\n    \"y\": 593\n  }\n}"
  '21':
    id: '21'
    ignoreworker: false
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ''
      id: e946d6e8-c7a7-46bf-8fd7-df4e246c826c
      iscommand: false
      name: End
      type: title
      version: -1
    taskid: e946d6e8-c7a7-46bf-8fd7-df4e246c826c
    timertriggers: []
    type: title
    view: "{\n  \"position\": {\n    \"x\": 714,\n    \"y\": 1200\n  }\n}"
  '3':
    id: '3'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '5'
    note: false
    quietmode: 0
    scriptarguments:
      text:
        simple: 8.8.8.8,1.2.3.4,32.43.54.65
    separatecontext: false
    skipunavailable: false
    task:
      brand: ''
      description: Extract IPs from the given text and place them both as output and
        in the context of a playbook.
      id: b679f00b-e759-47fc-861b-aa49e9179126
      iscommand: false
      name: ExtractIP
      script: ExtractIP
      type: regular
      version: -1
    taskid: b679f00b-e759-47fc-861b-aa49e9179126
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 46,\n    \"y\": 231\n  }\n}"
  '4':
    id: '4'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '7'
    note: false
    quietmode: 0
    scriptarguments:
      excludedEmails: {}
      extend-context:
        simple: testEmail=.
    separatecontext: false
    skipunavailable: false
    task:
      brand: ''
      description: Gets all email addresses in context, excluding ones given.
      id: f42ddce3-cb60-47b9-8512-d56bfdabe172
      iscommand: false
      name: ContextGetEmails
      script: ContextGetEmails
      type: regular
      version: -1
    taskid: f42ddce3-cb60-47b9-8512-d56bfdabe172
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 450,\n    \"y\": 413\n  }\n}"
  '5':
    id: '5'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '8'
    note: false
    quietmode: 0
    scriptarguments:
      excludedIps: {}
      extend-context:
        simple: testIP=.
    separatecontext: false
    skipunavailable: false
    task:
      brand: ''
      description: Gets all IP addresses in context, excluding ones given.
      id: 0cad0a19-49b9-4e13-8435-3489e7d70b0b
      iscommand: false
      name: ContextGetIps
      script: ContextGetIps
      type: regular
      version: -1
    taskid: 0cad0a19-49b9-4e13-8435-3489e7d70b0b
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 46,\n    \"y\": 413\n  }\n}"
  '6':
    id: '6'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '9'
    note: false
    quietmode: 0
    scriptarguments:
      extend-context:
        simple: testMD5=.
      hash:
        simple: MD5
    separatecontext: false
    skipunavailable: false
    task:
      brand: ''
      description: Gets hashes (MD5,SHA1,SHA256) from context.
      id: 5041c983-a78d-43d8-80b0-d1a6c2a8c1b8
      iscommand: false
      name: ContextGetHashes(MD5)
      script: ContextGetHashes
      type: regular
      version: -1
    taskid: 5041c983-a78d-43d8-80b0-d1a6c2a8c1b8
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 856,\n    \"y\": 413\n  }\n}"
  '7':
    id: '7'
    ignoreworker: false
    nexttasks:
      'yes':
      - '10'
    note: false
    quietmode: 0
    scriptarguments:
      expectedValue:
        simple: mail1@gmail.com,mail2@yahoo.com,mail3@aol.com
      fields: {}
      path: {}
      value:
        simple: ${.=val.testEmail.join() === 'mail1@gmail.com,mail2@yahoo.com,mail3@aol.com'}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 81c666e5-894f-4053-8866-3bab882eb053
      iscommand: false
      name: VerifyResponse(Email)
      script: IsTrue
      type: condition
      version: -1
    taskid: 81c666e5-894f-4053-8866-3bab882eb053
    timertriggers: []
    type: condition
    view: "{\n  \"position\": {\n    \"x\": 450,\n    \"y\": 593\n  }\n}"
  '8':
    id: '8'
    ignoreworker: false
    nexttasks:
      'yes':
      - '11'
    note: false
    quietmode: 0
    scriptarguments:
      expectedValue:
        simple: 8.8.8.8,1.2.3.4,32.43.54.65
      fields: {}
      path:
        simple: testIP
      value:
        simple: ${.=val.testIP.join() === '8.8.8.8,1.2.3.4,32.43.54.65'}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 6ae3ae12-7238-4427-88d9-529cd3185714
      iscommand: false
      name: VerifyResponse(IP)
      script: IsTrue
      type: condition
      version: -1
    taskid: 6ae3ae12-7238-4427-88d9-529cd3185714
    timertriggers: []
    type: condition
    view: "{\n  \"position\": {\n    \"x\": 46,\n    \"y\": 593\n  }\n}"
  '9':
    id: '9'
    ignoreworker: false
    nexttasks:
      'yes':
      - '21'
    note: false
    quietmode: 0
    scriptarguments:
      expectedValue:
        simple: c99a11a53a3748269e3f86d7ac38df11
      fields: {}
      path: {}
      value:
        simple: ${.=val.testMD5.join() === 'fe3aacae7fda163c2b628a08ba67585b'}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: e08fc913-0b23-41ac-8061-6d405fc8e9e8
      iscommand: false
      name: VerifyResponse(MD5)
      script: IsTrue
      type: condition
      version: -1
    taskid: e08fc913-0b23-41ac-8061-6d405fc8e9e8
    timertriggers: []
    type: condition
    view: "{\n  \"position\": {\n    \"x\": 856,\n    \"y\": 593\n  }\n}"
toversion: 4.1.9
version: -1
view: "{\n  \"linkLabelsPosition\": {},\n  \"paper\": {\n    \"dimensions\": {\n \
  \     \"height\": 1215,\n      \"width\": 2423,\n      \"x\": 46,\n      \"y\":\
  \ 50\n    }\n  }\n}"
